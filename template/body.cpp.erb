#include "<%= class_name %>.h"

USING_NS_CC;
USING_NS_CC_EXT;
using namespace cocosbuilder;

<%= class_name %>::<%= class_name %>()
{}

<% if member_variables && member_variables.length > 0 %>
<%= class_name %>::~<%= class_name %>()
{
<% member_variables.each do |var| %>
    CC_SAFE_RELEASE(<%= var['memberVarAssignmentName'] %>);
<% end %>
}
<% end %>

<% member_variables && member_variables.each do |var| %>
<%= typeof(var) %>* <%= class_name %>::get<%= var["memberVarAssignmentName"].sub(/^(_\w)/){|c| c.gsub!(/^_/, ""); c.capitalize } %>()
{
    return this-><%= var["memberVarAssignmentName"]%>;
}

<% end %>
void <%= class_name %>::onNodeLoaded(cocos2d::Node* node,  cocosbuilder::NodeLoader* nodeLoader) {
}


SEL_MenuHandler <%= class_name %>::onResolveCCBCCMenuItemSelector(cocos2d::Object* pTarget, const char* pSelectorName) {
    return NULL;    
}

Control::Handler <%= class_name %>::onResolveCCBCCControlSelector(cocos2d::Object* pTarget, const char * pSelectorName) {
    return NULL;
}

bool <%= class_name %>::onAssignCCBMemberVariable(cocos2d::Object* pTarget, const char* pMemberVariableName, Node* pNode) {
<% member_variables.each do |var| %>
    CCB_MEMBERVARIABLEASSIGNER_GLUE(this, "<%= var["memberVarAssignmentName"]%>", <%= typeof(var) %>*, this-><%= var["memberVarAssignmentName"]%>);
<% end %>
    return false;
}

bool <%= class_name %>::onAssignCCBCustomProperty(cocos2d::Object* pTarget, const char* pMemberVariableName, const Value& pCCBValue)
{
    bool bRet = false;
    if (pTarget == this)
    {
    <% custom_properties.each.with_index do |property, i| %>
        <% if i > 0 %>else <% end %>if (0 == strcmp(pMemberVariableName, "<%= property['name'] %>"))
        {
            this-><%= property['name'] %> = pCCBValue.as<%= property_type[property['type']].capitalize %>();
            log("<%= property['name'] %> = <%= symbol_type[property['type']]%>", <%= property['name'] %><% if property['type'] == 3 %>.c_str()<% end %>);
            bRet = true;
        }
    <% end if custom_properties %>
    }

    return bRet;
}
